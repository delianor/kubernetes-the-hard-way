# -*- mode: ruby -*-
# vi: set ft=ruby :

console = { 'name' => "console", 'ip' => "10.240.0.7" }
haproxy = { 'name' => "haproxy", 'ip' => "10.240.0.100" }
controller0 = { 'name' => "controller-0", 'ip' => "10.240.0.10" }
controller1 = { 'name' => "controller-1", 'ip' => "10.240.0.11" }
controller2 = { 'name' => "controller-2", 'ip' => "10.240.0.12" }
worker0 = { 'name' => "worker-0", 'ip' => "10.240.0.20" }
worker1 = { 'name' => "worker-1", 'ip' => "10.240.0.21" }
worker2 = { 'name' => "worker-2", 'ip' => "10.240.0.22" }
vms = [ console , haproxy, controller0, controller1, controller2, worker0, worker1, worker2 ]
# vms = [ console , haproxy ]

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  vms.each do |node|
    vm_name = node['name']
    vm_ip = node['ip']
    config.vm.define vm_name do |node_config|
      node_config.vm.hostname = "#{vm_name}"
      node_config.vm.network 'private_network', ip: "#{vm_ip}"
      node_config.vm.box = "ubuntu/bionic64"
      node_config.vm.box_version = "20190726.0.0"
      node_config.vm.provision "file", source: "ssh_pub_id_rsa", destination: "~/.ssh/ssh_pub_id_rsa"
      if vm_name == "console"
        node_config.vm.provision "file", source: "ssh_config", destination: "/home/vagrant/.ssh/config"
        node_config.vm.provision "file", source: "ssh_priv.pem", destination: "/home/vagrant/.ssh/key.pem"
        node_config.vm.provision "shell",
          inline: "chmod 400 /home/vagrant/.ssh/key.pem"
      end
      node_config.vm.provision "shell",
        inline: "cat /home/vagrant/.ssh/ssh_pub_id_rsa >> /home/vagrant/.ssh/authorized_keys"
      vms.each do |host|
        host_name = host['name']
        host_ip = host['ip']
        node_config.vm.provision "shell",
          inline: "echo '#{host_ip} #{host_name}' >> /etc/hosts"
      end
#       node_config.vm.box_url = "./example_box/dummy.box"
  end
end


  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
 # config.vm.box = "ubuntu/bionic64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL
end
